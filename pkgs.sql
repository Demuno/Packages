CREATE OR REPLACE PACKAGE PKG_ALUNO AS
  PROCEDURE EXCLUIR_ALUNO(p_id_aluno NUMBER);
  CURSOR CURSOR_ALUNOS_MAIORES_18 IS
    SELECT NOME, DATA_NASCIMENTO
    FROM ALUNOS
    WHERE FLOOR(MONTHS_BETWEEN(SYSDATE, DATA_NASCIMENTO) / 12) > 18;
  CURSOR CURSOR_ALUNOS_POR_CURSO(p_id_curso NUMBER) IS
    SELECT NOME
    FROM ALUNOS
    WHERE ID_CURSO = p_id_curso;
END PKG_ALUNO;
/

CREATE OR REPLACE PACKAGE BODY PKG_ALUNO AS
  PROCEDURE EXCLUIR_ALUNO(p_id_aluno NUMBER) IS
  BEGIN
    DELETE FROM MATRICULAS WHERE ID_ALUNO = p_id_aluno;
    DELETE FROM ALUNOS WHERE ID_ALUNO = p_id_aluno;
  END EXCLUIR_ALUNO;
END PKG_ALUNO;
/

CREATE OR REPLACE PACKAGE PKG_DISCIPLINA AS
  PROCEDURE CADASTRAR_DISCIPLINA(p_nome VARCHAR2, p_descricao VARCHAR2, p_carga_horaria NUMBER);
  CURSOR CURSOR_ALUNOS_POR_DISCIPLINA IS
    SELECT D.NOME, COUNT(*)
    FROM DISCIPLINAS D
    JOIN MATRICULAS M ON D.ID_DISCIPLINA = M.ID_DISCIPLINA
    GROUP BY D.NOME
    HAVING COUNT(*) > 10;
  FUNCTION CURSOR_MEDIA_IDADE_POR_DISCIPLINA(p_id_disciplina NUMBER) RETURN NUMBER;
  PROCEDURE LISTAR_ALUNOS_DISCIPLINA(p_id_disciplina NUMBER);
END PKG_DISCIPLINA;
/

CREATE OR REPLACE PACKAGE BODY PKG_DISCIPLINA AS
  PROCEDURE CADASTRAR_DISCIPLINA(p_nome VARCHAR2, p_descricao VARCHAR2, p_carga_horaria NUMBER) IS
  BEGIN
    INSERT INTO DISCIPLINAS (NOME, DESCRICAO, CARGA_HORARIA)
    VALUES (p_nome, p_descricao, p_carga_horaria);
  END CADASTRAR_DISCIPLINA;

  FUNCTION CURSOR_MEDIA_IDADE_POR_DISCIPLINA(p_id_disciplina NUMBER) RETURN NUMBER IS
    v_media_idade NUMBER;
  BEGIN
    SELECT AVG(FLOOR(MONTHS_BETWEEN(SYSDATE, A.DATA_NASCIMENTO) / 12))
    INTO v_media_idade
    FROM ALUNOS A
    JOIN MATRICULAS M ON A.ID_ALUNO = M.ID_ALUNO
    WHERE M.ID_DISCIPLINA = p_id_disciplina;
    RETURN v_media_idade;
  END CURSOR_MEDIA_IDADE_POR_DISCIPLINA;

  PROCEDURE LISTAR_ALUNOS_DISCIPLINA(p_id_disciplina NUMBER) IS
  BEGIN
    FOR r IN (SELECT A.NOME
              FROM ALUNOS A
              JOIN MATRICULAS M ON A.ID_ALUNO = M.ID_ALUNO
              WHERE M.ID_DISCIPLINA = p_id_disciplina) LOOP
      DBMS_OUTPUT.PUT_LINE(r.NOME);
    END LOOP;
  END LISTAR_ALUNOS_DISCIPLINA;
END PKG_DISCIPLINA;
/

CREATE OR REPLACE PACKAGE PKG_PROFESSOR AS
  CURSOR CURSOR_TURMAS_POR_PROFESSOR IS
    SELECT P.NOME, COUNT(*)
    FROM PROFESSORES P
    JOIN TURMAS T ON P.ID_PROFESSOR = T.ID_PROFESSOR
    GROUP BY P.NOME
    HAVING COUNT(*) > 1;
  FUNCTION TOTAL_TURMAS_PROFESSOR(p_id_professor NUMBER) RETURN NUMBER;
  FUNCTION PROFESSOR_DISCIPLINA(p_id_disciplina NUMBER) RETURN VARCHAR2;
END PKG_PROFESSOR;
/

CREATE OR REPLACE PACKAGE BODY PKG_PROFESSOR AS
  FUNCTION TOTAL_TURMAS_PROFESSOR(p_id_professor NUMBER) RETURN NUMBER IS
    v_total NUMBER;
  BEGIN
    SELECT COUNT(*)
    INTO v_total
    FROM TURMAS
    WHERE ID_PROFESSOR = p_id_professor;
    RETURN v_total;
  END TOTAL_TURMAS_PROFESSOR;

  FUNCTION PROFESSOR_DISCIPLINA(p_id_disciplina NUMBER) RETURN VARCHAR2 IS
    v_nome_professor VARCHAR2(100);
  BEGIN
    SELECT P.NOME
    INTO v_nome_professor
    FROM PROFESSORES P
    JOIN DISCIPLINAS D ON P.ID_PROFESSOR = D.ID_PROFESSOR
    WHERE D.ID_DISCIPLINA = p_id_disciplina;
    RETURN v_nome_professor;
  END PROFESSOR_DISCIPLINA;
END PKG_PROFESSOR;
/
